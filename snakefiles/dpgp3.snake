#!python3

import gzip as gz
import os


# ----- Definitions for the project ----- #

CHROMS = ['Chr' + c for c in ['2L', '2R', '3L', '3R']]
CHROM_LENGTHS = {'Chr2L':23011544,
                'Chr2R':21146708,
                'Chr3L':24543557,
                'Chr3R':27905053}
DATA_PATH = "/project/jnovembre/data/external_public/DPGP3/"

# ------  Rules ----- #

'''
    Untar the consensus sequence archive.
'''
rule untar_dpgp3:
    input:
        DATA_PATH + "dpgp3_sequences.tar.bz2"
    output:
        expand(DATA_PATH + "dpgp3_{CHROM}.tar", CHROM=CHROMS)
    shell:
        "tar -xjf {input} -C " + DATA_PATH

'''
    Combine the consensus sequences into a single file for one chromosome
'''
rule align_dpgp3:
    input:
        DATA_PATH + "dpgp3_{chrom}.tar",
        DATA_PATH + "inversions/noninverted_{chrom}.txt"
    output:
        DATA_PATH + "{chrom}.alignment.txt.gz"
    shell:
        "python src/merge_seq.py {input} {{}}_{wildcards.chrom}.seq "
        "| gzip -c > {output}"

'''
    Combine the consensus sequences into a single file for all chromosomes
'''
rule align_dpgp3_all:
    input:
        expand(DATA_PATH + "{CHROM}.alignment.txt.gz", CHROM=CHROMS)

'''
    Subsample, get minor allele counts and number observed for each site
'''
rule get_mac:
    input:
        DATA_PATH + "{chrom}.alignment.txt.gz"
    output:
        DATA_PATH + "{chrom}.mac.txt.gz"
    shell:
        "gunzip -c < {input} | python src/alignment2mac.py 100 "
        "| gzip -c > {output}"

rule get_mac_all:
    input:
        expand(DATA_PATH + "{CHROM}.mac.txt.gz", CHROM=CHROMS)

'''
    Convert minor allele counts to downsampled SFS for fastNeutrino.
    Downsample to 90 samples. Use a window size of 100Kb.
'''
rule mac2fastNeutrino:
    input:
        DATA_PATH + "{chrom}.mac.txt.gz",
        "data/dmel-4Dsites.txt"
    output:
        "data/DPGP3/windowed_sfs/{chrom}.sfs.txt"
    params:
        chr_len = lambda wildcards: CHROM_LENGTHS[wildcards.chrom]
    shell:
        '''
        python src/mac2sfs.py \
            {wildcards.chrom} {params.chr_len} 100000 90 {input} > {output}
        '''

rule mac2fastNeutrino_all:
    input:
        expand("data/DPGP3/windowed_sfs/{CHROM}.sfs.txt", CHROM=CHROMS)
